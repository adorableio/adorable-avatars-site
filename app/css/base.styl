
body {
  background: off-white;
}

a {
  color: blue;
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
}

.input-container {
  display: inline-block;
}
label {
  display: block;
  &.inline { display: inline-block; }
}

//
// User Container
//
.user-card {
  background: white;
  padding: 25px;

  &:before {
    background-image: url(https://pbs.twimg.com/profile_banners/14392014/1398709333/1500x500);
    background-size: cover;
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 60%;
    left: 0;
    z-index: 2;
  }

  > * {
    position: relative;
    z-index: 3;
  }

  h2, h3, p {
    margin: 0;
    line-height: 1.2em;
  }

  hr {
    border: none;
    border-bottom: 1px solid light-grey;
  }

  .name {
    position: relative;
    z-index: 4;
    &:before {
      background-color: white;
      content: '';
      position: absolute;
      top: -20px;
      bottom: 200px;
      left: 0;
      right: 0;
      z-index: -1;
    }
  }


  .container {
    border-radius: 1000px;
    text-align: center;
    img {
      max-width: 100%;
      width: auto;
    }
  }

  .position {
    color: grey;
  }
}



.input-wrapper {
  span { display: inline-block; }
  .bullet {
    content: ' ';
  }
  input[type=text] {
    min-width: 30px;
    width: 50px;
  }
  input[type=range] {
    position: absolute;
    width: 50px;
  }
  .edit {
    outline: none;
    padding: 0 2px;
    color: black;
    box-shadow: 0 1px 0 black;

    &:focus {
      background: yellow;
    }
  }
}

code-fade-color = light-grey;

.code-row {
  text-align: center;
}
.code-wrapper {
  width: auto;
  display: inline-block;
}

code {
  background-color: code-background-color;
  box-shadow: 0 0 0 1px code-fade-color,
              0 3px 0 0 rgba(code-fade-color, .65);
  display: block;
  padding: 15px 15px 15px 45px;
  position: relative;
  overflow-x: scroll;
  white-space: nowrap;

  .fade {
    color: darken(code-fade-color, 15%);
    font-weight: 400;
  }

  .line-numbers {
    border-right: 1px solid code-fade-color;
    color: code-fade-color;
    padding: 15px 10px;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
  }
}


input-border = light-grey;
input-border-hover = lighten(red, 65%);
input-border-focus = red;

.input-container { margin-right: 15px; }
.input-container.checkbox {
  background: transparent;
  border-left: 1px solid light-grey;
  margin: 0;
  padding: 0;
  height: 36px;
  width: 45px;
  margin-left: -64px;
  &:hover {
    background: rgba(purple, .15);
    input + label { color: white; }
    input:checked + label { color: red; }
  }
}
input, label {
  outline: none;
  vertical-align: middle;
}
label.inline {
  line-height: 1;
}


input[type='text'] {
  box-shadow: 0 0 0 1px input-border,
              inset 0 2px 0 0 rgba(code-fade-color, .45);
  border: none;
  font-size: 16px;
  margin: 0;
  padding: 0 50px 0 15px;
  height: 36px;
  &:hover { box-shadow: inset 0 0 0 1px input-border-hover; }
  &:focus { box-shadow: inset 0 0 0 1px input-border-focus; }
}

input[type=range] {
  transition: all .6s ease;
  -webkit-appearance: none !important
  border-radius: 1000px;
  box-shadow: inset 0 1px 0 light-grey,
              0 1px 0 white;
  border: none;
  background-color: rgba(light-grey, .35);
  margin: 0;
  padding: 0 5px;
  height: 6px;
  outline: none;
  &:hover {
    &::-webkit-slider-thumb { box-shadow: inset 0 0 0 1px input-border-hover; }
  }
  &:focus {
    &::-webkit-slider-thumb { box-shadow: inset 0 0 0 1px input-border-focus; }
  }
}

input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none !important
  border-radius: 1000px;
  box-shadow: inset 0 0 0 1px input-border;
  background-color: white;
  width: 20px;
  height: 20px;

}

input[type=checkbox] {
  display: none;
  + label {
    cursor: pointer;
    color: light-grey;
    font-size: 14px;
    height: 100%;
    text-transform: uppercase;
    text-decoration: line-through;
    padding: 11px 5px;
    height: 100%;
  }
  &:checked {
    + label {
      color: red;
      text-decoration: none;
    }
  }
}


flash(background-color, text-color) {
  background-color: background-color;
  color: text-color;
}
@-webkit-keyframes flash {
  0% { flash: white, red; }
  50% { flash: red, white; }
  100% { flash: white, red; }
}

[class*='-value'] {
  &.flash {
    animation: flash 600ms 1 ease-in;
  }

}
